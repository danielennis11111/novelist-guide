rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Common function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Common function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Novels collection
    match /novels/{novelId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
      
      // Subcollections
      match /versions/{versionId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/novels/$(novelId)).data.userId);
      }
      
      match /backups/{backupId} {
        allow read: if isOwner(get(/databases/$(database)/documents/novels/$(novelId)).data.userId);
      }
    }

    // User settings and API keys
    match /apiKeys/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}